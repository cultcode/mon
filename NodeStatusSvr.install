#!/bin/bash
#set -x

usage () {
  echo "Usage: $0 PATH_INSTALL ROOT_PASSWORD"
}

if [ "$#" -ne 2 ];then
  usage;
  exit 1;
fi;

user=`whoami`
RETVAL=0
path_store=$HOME
path_install=$1
password=$2

expect -version || exit 1;
 
function exec_su () {
  echo "Going to execute command: $*"
  if [ $user == "root" ]; then
    echo $* | awk '{system($0)}'
    RETVAL=$?
  else
    expect -c "
      set timeout -1
      spawn su -p -c \"$*\" root
      expect {
        -re ".*assword:"
        {
          send $password\r
        }
      }
      expect eof
      catch wait result
      exit [lindex \$result 3]
    "
    RETVAL=$?
  fi

  if [ $RETVAL -eq 0 ];then
    echo "Succeed";
  else 
    echo "Fail";
    exit $RETVAL;
  fi;      		    
}

CMD="\
make -f $path_store/makefile install && \
rm  -rf $path_store/makefile && \
mkdir -p $path_install && \
mv -f $path_store/NodeStatusSvr          $path_install/ && \
mv -f $path_store/NodeStatusSvr.config   $path_install/ && \
mv -f $path_store/LogTruncate.sh         $path_install/ && \
mv -f $path_store/SvrScheduler.sh        $path_install/ && \
chmod +x $path_install/NodeStatusSvr          && \
chmod +x $path_install/LogTruncate.sh         && \
chmod +x $path_install/SvrScheduler.sh\
"
exec_su $CMD

PROGRAM=NodeStatusSvr 
CRONTAB1="\* \* \* \* \* $path_install/SvrScheduler.sh $path_install/NodeStatusSvr start > /dev/null  2>\&1"
CRONTAB2="0 0 1 \* \* $path_install/LogTruncate.sh  $path_install/NodeStatusSvr $path_install/NodeStatusSvr.log > /dev/null  2>\&1"
#CMD="crontab -l | sed /NodeStatusSvr/d | sed '1i$CRONTAB2' | sed '1i$CRONTAB1' | crontab"
CMD="\
touch /var/spool/cron/root && \
crontab -l > $path_install/cron.bak && \
echo >> $path_install/cron.bak && \
sed -i -e '/NodeStatusSvr/d' $path_install/cron.bak && \
sed -i '1i$CRONTAB2' $path_install/cron.bak &&  \
sed -i '1i$CRONTAB1' $path_install/cron.bak && \
sed -i '/^\s*\$/d' $path_install/cron.bak && \
crontab $path_install/cron.bak\
"

exec_su $CMD

CMD="$path_install/SvrScheduler.sh $path_install/NodeStatusSvr restart"

exec_su $CMD
